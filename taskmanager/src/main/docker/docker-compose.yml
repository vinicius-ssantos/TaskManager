#version: '3.8'
#services:
#  app:
#    build:
#      context: ../../..
#      dockerfile: taskmanager/src/main/docker/Dockerfile.jvm
#    ports:
#      - "8080:8080"



####
# This docker-compose file builds a container that runs the Quarkus application in JVM mode as well as the accompanying postgres
# container used by the application.
#
# Before building the container image run:
#
# mvn package
#
# To build and run the network run:
#
# docker-compose -f src/main/docker/docker-compose.yml up
#
###


####
# This docker-compose file builds a container that runs the Quarkus application in JVM mode as well as the accompanying postgres
# container used by the application.
#
# Before building the container image run:
#
# mvn package
#
# To build and run the network run:
#
# docker-compose -f src/main/docker/docker-compose.yml up
#
###
#version: "3.8"
#services:
#  app:
#    build:
#      # Context set back to the project's root directory to allow docker to find the files in the
#      # [target] directory, needed to create the quarkus app container. Not doing so can lead to
#      # source not found or permission issues trying to access the files.
#      context: ../../../
#      dockerfile: src/main/docker/Dockerfile.jvm
#    ports:
#      - "8080:8080"
#  postgres:
#    image: postgres
#    volumes:
#      - ./postgres-init-db.sql:/docker-entrypoint-initdb.d/init.sql
#    environment:
#      POSTGRES_PASSWORD: admin
#      POSTGRES_USER: admin
#      POSTGRES_DB: mytestdb
#      POSTGRES_PORT: 5432

services:
  postgresql:
    container_name: taskmanager-postgresql
    image: postgres
    environment:
      POSTGRES_USER: viniciussantos
      POSTGRES_PASSWORD: viniciussantos
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    restart: unless-stopped

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo:
